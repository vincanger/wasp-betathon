app hackathonApp {
  wasp: {
    version: "^0.11.6"
  },
  db: {
    system: PostgreSQL
  },
  title: "Wasp SaaS-a-Thon",
  emailSender: {
    provider: SendGrid,
    defaultFrom: {
        name: "Wasp SaaS-a-Thon",
        email: "vince@wasp-lang.dev"
    },
  },
  dependencies: [
    ("react-feather", "2.0.10"),
    ("react-fast-marquee", "1.3.5"),
    ("@tailwindcss/forms", "^0.5.3"),
    ("@tailwindcss/typography", "^0.5.7")
  ]
}

entity Registration {=psl
  email       String    @id @unique
  name        String    
  createdAt   DateTime  @default(now())
psl=}

entity Submission {=psl
  email       String    @id @unique
  name        String    @unique
  github      String
  description String  
  twitter     String?
  country     String? 
  website     String?
  image       String?
  approved    Boolean   @default(false)
  noticeSent  Boolean   @default(false)
  createdAt   DateTime  @default(now())
psl=}

route RootRoute { path: "/", to: MainPage }
page MainPage {
  component: import Main from "@client/MainPage"
}

action submitProject {
  fn: import { submitProject } from "@server/actions.js",
  entities: [Submission, Registration]
}

action registerProject {
  fn: import { registerProject } from "@server/actions.js",
  entities: [Registration]
}

query getProjects {
  fn: import { getProjects } from "@server/queries.js",
  entities: [Submission]
}

query getParticipants {
  fn: import { getParticipants } from "@server/queries.js",
  entities: [Registration]
}

job notifyApprovedSubmissions {
  executor: PgBoss,
  perform: {
    fn: import { checkSubmissionsAndSend } from "@server/workers.js"
  },
  schedule: {
    cron: "0 * * * *" // checks every hour
  },
  entities: [Submission]
}